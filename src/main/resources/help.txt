${name} by ${metracer.author}, ${metracer.release.year}, version ${project.version}, ${metracer.homepage}
${name} is a tool that allows to spy for methods invocation (methods tracing) in a Java programs.

${usage}

Usage examples:
1) Spy for invocations of all methods of classes from package com.myprogram (and all subpackages as well) in a Java program with PID 345

# ${launchstring} 345 com.myprogram

2) Spy for invocations of all methods of classes which name starts from com.myprogram.MyClass (e.g. this could be com.myprogram.MyClass1 and com.myprogram.MyClas2) in a Java program with PID 345

# ${launchstring} 345 com.myprogram.MyClass

3) Spy for invocations of all methods which name contains doSomething of classes which name starts from com.myprogram.MyClass (e.g. this could be com.myprogram.MyClass1 and com.myprogram.MyClas2) in a Java program with PID 345

# ${launchstring} 345 com.myprogram.MyClass doSomething

4) Spy for invocations of all methods which name either contains doThisThing OR doAnotherThing of classes which name starts from com.myprogram.MyClass (e.g. this could be com.myprogram.MyClass1 and com.myprogram.MyClas2) in a Java program with PID 345

# ${launchstring} 345 com.myprogram.MyClass "(doThisThing|doAnotherThing)"

5) Spy for invocations of all methods of classes which name either starts from com.myprogram.ThisClass or from com.myprogram.ThatClass in a Java program with PID 345

# ${launchstring} 345 "(com.myprogram.ThisClass|com.myprogram.ThatClass)"
---

Note 1: ${name} requires tools.jar from a JDK in a classpath.
Note 2: for a successful run it's required to launch ${name} under the same user as a target Java program. Otherwise ${name} would fail to attach to a target Java program.
